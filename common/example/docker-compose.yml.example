services:
    STACK_NAME-nginx:
        container_name: STACK_NAME-nginx
        restart: unless-stopped
        image: nginx:latest
        volumes:
            - ../../:/var/www
            - ./vhost.conf:/etc/nginx/conf.d/custom.conf
        ports:
            - "80"
        depends_on:
            - STACK_NAME-php
        environment:
            VIRTUAL_HOST: ${DOMAIN_HOST}
            SELF_SIGNED_HOST: ${SELF_SIGNED_HOST}
            VIRTUAL_PORT: 80
            LETSENCRYPT_HOST: ${DOMAIN_HOST}
            LETSENCRYPT_EMAIL: ${DOMAIN_EMAIL}
        networks:
            - nginx-proxy
            - STACK_NAME

    STACK_NAME-php:
        container_name: STACK_NAME-php
        user: ${USER_ID}:${GROUP_ID}
        restart: unless-stopped
        build:
            context: ../../
            dockerfile: scripts/common/php/Dockerfile
            args:
                PHP_IMAGE_VERSION: ${PHP_IMAGE_VERSION}
                USER_ID: ${USER_ID}
                GROUP_ID: ${GROUP_ID}
                NODE_VERSION: ${NODE_VERSION}
        volumes:
            - ../../:/var/www
            - ./php.ini:/usr/local/etc/php/conf.d/php.ini
            - ../common/php/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
        tmpfs:
            - /dev/shm
        depends_on:
            - STACK_NAME-mysql
            - STACK_NAME-redis
        ports:
            - ${XDEBUG_PORT}:${XDEBUG_PORT}
        extra_hosts:
            - "host.docker.internal:host-gateway"
            - ${EXTRA_HOST_MINIO}
        networks:
            - nginx-proxy
            - STACK_NAME

    STACK_NAME-mysql:
        container_name: STACK_NAME-mysql
        image: ${MYSQL_IMAGE_VERSION}
        restart: unless-stopped
        volumes:
            - ../common/mysql/mysql.conf:/etc/mysql/conf.d/myconf.conf
            - ./init:/docker-entrypoint-initdb.d
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USERNAME}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
        ports:
            - ${MYSQL_EXTERNAL_PORT}:3306
        networks:
            - STACK_NAME

    STACK_NAME-redis:
        container_name: STACK_NAME-redis
        image: ${REDIS_IMAGE_VERSION}
        restart: unless-stopped
        environment:
            REDIS_PASSWORD: ${REDIS_PASSWORD}
        command: sh -c "exec redis-server --requirepass \"$REDIS_PASSWORD\""
        sysctls:
            - net.core.somaxconn=511
        networks:
            - STACK_NAME

networks:
    STACK_NAME:
    nginx-proxy:
        external: true
